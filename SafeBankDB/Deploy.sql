/*
Deployment script for SafeBankDB3

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SafeBankDB3"
:setvar DefaultFilePrefix "SafeBankDB3"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Accounts]...';


GO
CREATE SCHEMA [Accounts]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Bank]...';


GO
CREATE SCHEMA [Bank]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Customer]...';


GO
CREATE SCHEMA [Customer]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Employee]...';


GO
CREATE SCHEMA [Employee]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Memberships]...';


GO
CREATE SCHEMA [Memberships]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Accounts].[AccountDetails]...';


GO
CREATE TABLE [Accounts].[AccountDetails] (
    [Id]            INT             IDENTITY (1, 1) NOT NULL,
    [BankId]        INT             NOT NULL,
    [AccountNumber] INT             NOT NULL,
    [AccountName]   NVARCHAR (30)   NULL,
    [Balance]       DECIMAL (19, 4) NOT NULL,
    [Overdraft]     DECIMAL (19, 4) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Accounts].[AccessLevel]...';


GO
CREATE TABLE [Accounts].[AccessLevel] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Accounts].[UserAccountAccess]...';


GO
CREATE TABLE [Accounts].[UserAccountAccess] (
    [Id]            INT IDENTITY (1, 1) NOT NULL,
    [AccountId]     INT NOT NULL,
    [UserId]        INT NOT NULL,
    [AccessLevelId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Accounts].[AccountTypes]...';


GO
CREATE TABLE [Accounts].[AccountTypes] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Accounts].[Account]...';


GO
CREATE TABLE [Accounts].[Account] (
    [Id]               INT IDENTITY (1, 1) NOT NULL,
    [AccountTypeId]    INT NOT NULL,
    [AccountDetailsId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Accounts].[Transactions]...';


GO
CREATE TABLE [Accounts].[Transactions] (
    [Id]        INT             IDENTITY (1, 1) NOT NULL,
    [AccountId] INT             NOT NULL,
    [Deposeted] DECIMAL (19, 4) NOT NULL,
    [Withdrawn] DECIMAL (19, 4) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Bank].[OrganisationDetails]...';


GO
CREATE TABLE [Bank].[OrganisationDetails] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (30) NOT NULL,
    [Code] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Bank].[BrancheDetails]...';


GO
CREATE TABLE [Bank].[BrancheDetails] (
    [Id]                    INT           IDENTITY (1, 1) NOT NULL,
    [Name]                  NVARCHAR (30) NOT NULL,
    [Code]                  INT           NOT NULL,
    [OrganisationDetailsId] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Bank].[BankDetails]...';


GO
CREATE TABLE [Bank].[BankDetails] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Name]             NVARCHAR (30) NOT NULL,
    [Code]             INT           NOT NULL,
    [BrancheDetailsId] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Customer].[CustomerDetails]...';


GO
CREATE TABLE [Customer].[CustomerDetails] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Given name]  NVARCHAR (50)  NOT NULL,
    [Family name] NVARCHAR (50)  NOT NULL,
    [Phone]       NVARCHAR (14)  NOT NULL,
    [Email]       NVARCHAR (254) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Customer].[Customer]...';


GO
CREATE TABLE [Customer].[Customer] (
    [Id]                INT IDENTITY (1, 1) NOT NULL,
    [UserId]            INT NOT NULL,
    [CustomerDetailsId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Employee].[EmployeeDetails]...';


GO
CREATE TABLE [Employee].[EmployeeDetails] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Given name]  NVARCHAR (50)  NOT NULL,
    [Family name] NVARCHAR (50)  NOT NULL,
    [Phone]       NVARCHAR (14)  NOT NULL,
    [Email]       NVARCHAR (254) NOT NULL,
    [Code]        INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Employee].[Employee]...';


GO
CREATE TABLE [Employee].[Employee] (
    [Id]                INT IDENTITY (1, 1) NOT NULL,
    [UserId]            INT NOT NULL,
    [EmployeeDetailsId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Employee].[EmployeeLocations]...';


GO
CREATE TABLE [Employee].[EmployeeLocations] (
    [Id]         INT IDENTITY (1, 1) NOT NULL,
    [EmployeeId] INT NOT NULL,
    [BankId]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[Roles]...';


GO
CREATE TABLE [Memberships].[Roles] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [Name]          NVARCHAR (30) NOT NULL,
    [SystemDefault] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[UserDetails]...';


GO
CREATE TABLE [Memberships].[UserDetails] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Username] NVARCHAR (MAX) NOT NULL,
    [Email]    NVARCHAR (254) NOT NULL,
    [Comment]  NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[UserActivity]...';


GO
CREATE TABLE [Memberships].[UserActivity] (
    [Id]                INT      IDENTITY (1, 1) NOT NULL,
    [IsApproved]        BIT      NOT NULL,
    [IsLockedOut]       BIT      NOT NULL,
    [CreatedDate]       DATETIME NOT NULL,
    [LastLoggedInDate]  DATETIME NULL,
    [LastActiveDate]    DATETIME NOT NULL,
    [LastLockedOutDate] DATETIME NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[UserAndPassword]...';


GO
CREATE TABLE [Memberships].[UserAndPassword] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Password]    NVARCHAR (MAX) NOT NULL,
    [LastChanged] DATETIME       NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[UserSecurityQuestionAndAnswer]...';


GO
CREATE TABLE [Memberships].[UserSecurityQuestionAndAnswer] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [QuestionId] INT            NOT NULL,
    [Answer]     NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[SecurityQuestion]...';


GO
CREATE TABLE [Memberships].[SecurityQuestion] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [Text]          NVARCHAR (MAX) NOT NULL,
    [SystemDefault] BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Memberships].[User]...';


GO
CREATE TABLE [Memberships].[User] (
    [Id]                       INT IDENTITY (1, 1) NOT NULL,
    [SecurityQuestionAnswerId] INT NOT NULL,
    [UserAndPasswordId]        INT NOT NULL,
    [UserActivityId]           INT NOT NULL,
    [UserDetailsId]            INT NOT NULL,
    [RoleId]                   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Accounts].[FK_AccountDetails_BankId]...';


GO
ALTER TABLE [Accounts].[AccountDetails]
    ADD CONSTRAINT [FK_AccountDetails_BankId] FOREIGN KEY ([BankId]) REFERENCES [Bank].[BankDetails] ([Id]);


GO
PRINT N'Creating [Accounts].[FK_AccountAccess_AccountId]...';


GO
ALTER TABLE [Accounts].[UserAccountAccess]
    ADD CONSTRAINT [FK_AccountAccess_AccountId] FOREIGN KEY ([AccountId]) REFERENCES [Accounts].[Account] ([Id]);


GO
PRINT N'Creating [Accounts].[FK_AccountAccess_UserId]...';


GO
ALTER TABLE [Accounts].[UserAccountAccess]
    ADD CONSTRAINT [FK_AccountAccess_UserId] FOREIGN KEY ([UserId]) REFERENCES [Memberships].[User] ([Id]);


GO
PRINT N'Creating [Accounts].[FK_AccountAccess_AccessLevelId]...';


GO
ALTER TABLE [Accounts].[UserAccountAccess]
    ADD CONSTRAINT [FK_AccountAccess_AccessLevelId] FOREIGN KEY ([AccessLevelId]) REFERENCES [Accounts].[AccessLevel] ([Id]);


GO
PRINT N'Creating [Accounts].[FK_Account_AccountType]...';


GO
ALTER TABLE [Accounts].[Account]
    ADD CONSTRAINT [FK_Account_AccountType] FOREIGN KEY ([AccountTypeId]) REFERENCES [Accounts].[AccountTypes] ([Id]);


GO
PRINT N'Creating [Accounts].[FK_Account_AccountDetails]...';


GO
ALTER TABLE [Accounts].[Account]
    ADD CONSTRAINT [FK_Account_AccountDetails] FOREIGN KEY ([AccountDetailsId]) REFERENCES [Accounts].[AccountDetails] ([Id]);


GO
PRINT N'Creating [Accounts].[FK_Transactions_AccountId]...';


GO
ALTER TABLE [Accounts].[Transactions]
    ADD CONSTRAINT [FK_Transactions_AccountId] FOREIGN KEY ([AccountId]) REFERENCES [Accounts].[Account] ([Id]);


GO
PRINT N'Creating [Bank].[FK_Branche_Organisation]...';


GO
ALTER TABLE [Bank].[BrancheDetails]
    ADD CONSTRAINT [FK_Branche_Organisation] FOREIGN KEY ([OrganisationDetailsId]) REFERENCES [Bank].[OrganisationDetails] ([Id]);


GO
PRINT N'Creating [Bank].[FK_Bank_Branche]...';


GO
ALTER TABLE [Bank].[BankDetails]
    ADD CONSTRAINT [FK_Bank_Branche] FOREIGN KEY ([BrancheDetailsId]) REFERENCES [Bank].[BrancheDetails] ([Id]);


GO
PRINT N'Creating [Customer].[FK_Customer_UserId]...';


GO
ALTER TABLE [Customer].[Customer]
    ADD CONSTRAINT [FK_Customer_UserId] FOREIGN KEY ([UserId]) REFERENCES [Memberships].[User] ([Id]);


GO
PRINT N'Creating [Customer].[FK_Customer_EmployeeDetails]...';


GO
ALTER TABLE [Customer].[Customer]
    ADD CONSTRAINT [FK_Customer_EmployeeDetails] FOREIGN KEY ([CustomerDetailsId]) REFERENCES [Customer].[CustomerDetails] ([Id]);


GO
PRINT N'Creating [Employee].[FK_Employee_UserId]...';


GO
ALTER TABLE [Employee].[Employee]
    ADD CONSTRAINT [FK_Employee_UserId] FOREIGN KEY ([UserId]) REFERENCES [Memberships].[User] ([Id]);


GO
PRINT N'Creating [Employee].[FK_Employee_EmployeeDetails]...';


GO
ALTER TABLE [Employee].[Employee]
    ADD CONSTRAINT [FK_Employee_EmployeeDetails] FOREIGN KEY ([EmployeeDetailsId]) REFERENCES [Employee].[EmployeeDetails] ([Id]);


GO
PRINT N'Creating [Employee].[FK_EmployeeLocations_BankId]...';


GO
ALTER TABLE [Employee].[EmployeeLocations]
    ADD CONSTRAINT [FK_EmployeeLocations_BankId] FOREIGN KEY ([BankId]) REFERENCES [Bank].[BankDetails] ([Id]);


GO
PRINT N'Creating [Employee].[FK_EmployeeLocations_EmployeeId]...';


GO
ALTER TABLE [Employee].[EmployeeLocations]
    ADD CONSTRAINT [FK_EmployeeLocations_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [Employee].[Employee] ([Id]);


GO
PRINT N'Creating [Memberships].[FK_UserSecurityQuestionAndAnswer_SecurityQuestion]...';


GO
ALTER TABLE [Memberships].[UserSecurityQuestionAndAnswer]
    ADD CONSTRAINT [FK_UserSecurityQuestionAndAnswer_SecurityQuestion] FOREIGN KEY ([QuestionId]) REFERENCES [Memberships].[SecurityQuestion] ([Id]);


GO
PRINT N'Creating [Memberships].[FK_User_UserSecurityQuestionAndAnswer]...';


GO
ALTER TABLE [Memberships].[User]
    ADD CONSTRAINT [FK_User_UserSecurityQuestionAndAnswer] FOREIGN KEY ([SecurityQuestionAnswerId]) REFERENCES [Memberships].[UserSecurityQuestionAndAnswer] ([Id]);


GO
PRINT N'Creating [Memberships].[FK_User_UserAndPassword]...';


GO
ALTER TABLE [Memberships].[User]
    ADD CONSTRAINT [FK_User_UserAndPassword] FOREIGN KEY ([UserAndPasswordId]) REFERENCES [Memberships].[UserAndPassword] ([Id]);


GO
PRINT N'Creating [Memberships].[FK_User_UserActivity]...';


GO
ALTER TABLE [Memberships].[User]
    ADD CONSTRAINT [FK_User_UserActivity] FOREIGN KEY ([UserActivityId]) REFERENCES [Memberships].[UserActivity] ([Id]);


GO
PRINT N'Creating [Memberships].[FK_User_Details]...';


GO
ALTER TABLE [Memberships].[User]
    ADD CONSTRAINT [FK_User_Details] FOREIGN KEY ([UserDetailsId]) REFERENCES [Memberships].[UserDetails] ([Id]);


GO
PRINT N'Creating [Memberships].[FK_User_Role]...';


GO
ALTER TABLE [Memberships].[User]
    ADD CONSTRAINT [FK_User_Role] FOREIGN KEY ([RoleId]) REFERENCES [Memberships].[Roles] ([Id]);


GO
PRINT N'Creating [Accounts].[AccountDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account details record', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Accounts].[AccountDetails].[BankId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the bank the account belongs to', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountDetails', @level2type = N'COLUMN', @level2name = N'BankId';


GO
PRINT N'Creating [Accounts].[AccountDetails].[AccountNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The account number for the account', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountDetails', @level2type = N'COLUMN', @level2name = N'AccountNumber';


GO
PRINT N'Creating [Accounts].[AccountDetails].[AccountName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the account', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountDetails', @level2type = N'COLUMN', @level2name = N'AccountName';


GO
PRINT N'Creating [Accounts].[AccountDetails].[Balance].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The current balance of the account', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountDetails', @level2type = N'COLUMN', @level2name = N'Balance';


GO
PRINT N'Creating [Accounts].[AccountDetails].[Overdraft].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The overdraft allowed on the account', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountDetails', @level2type = N'COLUMN', @level2name = N'Overdraft';


GO
PRINT N'Creating [Accounts].[AccessLevel].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user access level record', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccessLevel', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Accounts].[AccessLevel].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the account access level', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccessLevel', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [Accounts].[UserAccountAccess].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user account access  record', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'UserAccountAccess', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Accounts].[UserAccountAccess].[AccountId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account the user has access to', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'UserAccountAccess', @level2type = N'COLUMN', @level2name = N'AccountId';


GO
PRINT N'Creating [Accounts].[UserAccountAccess].[UserId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user the account allows access to', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'UserAccountAccess', @level2type = N'COLUMN', @level2name = N'UserId';


GO
PRINT N'Creating [Accounts].[AccountTypes].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account type', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountTypes', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Accounts].[AccountTypes].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the account type', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'AccountTypes', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [Accounts].[Account].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Account', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Accounts].[Account].[AccountTypeId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account type', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Account', @level2type = N'COLUMN', @level2name = N'AccountTypeId';


GO
PRINT N'Creating [Accounts].[Account].[AccountDetailsId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account details', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Account', @level2type = N'COLUMN', @level2name = N'AccountDetailsId';


GO
PRINT N'Creating [Accounts].[Transactions].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the transaction record', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Transactions', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Accounts].[Transactions].[AccountId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the account the transaction belongs to', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Transactions', @level2type = N'COLUMN', @level2name = N'AccountId';


GO
PRINT N'Creating [Accounts].[Transactions].[Deposeted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The amount that is deposeted', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Transactions', @level2type = N'COLUMN', @level2name = N'Deposeted';


GO
PRINT N'Creating [Accounts].[Transactions].[Withdrawn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The amount that is withdrawn', @level0type = N'SCHEMA', @level0name = N'Accounts', @level1type = N'TABLE', @level1name = N'Transactions', @level2type = N'COLUMN', @level2name = N'Withdrawn';


GO
PRINT N'Creating [Bank].[OrganisationDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the organisation record', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'OrganisationDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Bank].[OrganisationDetails].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the organisation', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'OrganisationDetails', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [Bank].[OrganisationDetails].[Code].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The code of the organisation', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'OrganisationDetails', @level2type = N'COLUMN', @level2name = N'Code';


GO
PRINT N'Creating [Bank].[BrancheDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the branche record', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BrancheDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Bank].[BrancheDetails].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the branche', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BrancheDetails', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [Bank].[BrancheDetails].[Code].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The code for the branche', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BrancheDetails', @level2type = N'COLUMN', @level2name = N'Code';


GO
PRINT N'Creating [Bank].[BrancheDetails].[OrganisationDetailsId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the organisation the branche is under', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BrancheDetails', @level2type = N'COLUMN', @level2name = N'OrganisationDetailsId';


GO
PRINT N'Creating [Bank].[BankDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The Id of the bank', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BankDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Bank].[BankDetails].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the bank', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BankDetails', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [Bank].[BankDetails].[Code].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The code of the bank', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BankDetails', @level2type = N'COLUMN', @level2name = N'Code';


GO
PRINT N'Creating [Bank].[BankDetails].[BrancheDetailsId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the branche the bank belongs to', @level0type = N'SCHEMA', @level0name = N'Bank', @level1type = N'TABLE', @level1name = N'BankDetails', @level2type = N'COLUMN', @level2name = N'BrancheDetailsId';


GO
PRINT N'Creating [Customer].[CustomerDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the employee details record', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'CustomerDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Customer].[CustomerDetails].[Given name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees first name', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'CustomerDetails', @level2type = N'COLUMN', @level2name = N'Given name';


GO
PRINT N'Creating [Customer].[CustomerDetails].[Family name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees surename', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'CustomerDetails', @level2type = N'COLUMN', @level2name = N'Family name';


GO
PRINT N'Creating [Customer].[CustomerDetails].[Phone].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees phone number', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'CustomerDetails', @level2type = N'COLUMN', @level2name = N'Phone';


GO
PRINT N'Creating [Customer].[CustomerDetails].[Email].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees email', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'CustomerDetails', @level2type = N'COLUMN', @level2name = N'Email';


GO
PRINT N'Creating [Customer].[Customer].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the customer record', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'Customer', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Customer].[Customer].[UserId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user the customer login in with', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'Customer', @level2type = N'COLUMN', @level2name = N'UserId';


GO
PRINT N'Creating [Customer].[Customer].[CustomerDetailsId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the customer details record', @level0type = N'SCHEMA', @level0name = N'Customer', @level1type = N'TABLE', @level1name = N'Customer', @level2type = N'COLUMN', @level2name = N'CustomerDetailsId';


GO
PRINT N'Creating [Employee].[EmployeeDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the employee details record', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Employee].[EmployeeDetails].[Given name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees first name', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeDetails', @level2type = N'COLUMN', @level2name = N'Given name';


GO
PRINT N'Creating [Employee].[EmployeeDetails].[Family name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees surename', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeDetails', @level2type = N'COLUMN', @level2name = N'Family name';


GO
PRINT N'Creating [Employee].[EmployeeDetails].[Phone].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees phone number', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeDetails', @level2type = N'COLUMN', @level2name = N'Phone';


GO
PRINT N'Creating [Employee].[EmployeeDetails].[Email].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees email', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeDetails', @level2type = N'COLUMN', @level2name = N'Email';


GO
PRINT N'Creating [Employee].[EmployeeDetails].[Code].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The employees code', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeDetails', @level2type = N'COLUMN', @level2name = N'Code';


GO
PRINT N'Creating [Employee].[Employee].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the employee record', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'Employee', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Employee].[Employee].[UserId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user the employee login in with', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'Employee', @level2type = N'COLUMN', @level2name = N'UserId';


GO
PRINT N'Creating [Employee].[Employee].[EmployeeDetailsId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the employee details record', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'Employee', @level2type = N'COLUMN', @level2name = N'EmployeeDetailsId';


GO
PRINT N'Creating [Employee].[EmployeeLocations].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the employee location record', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeLocations', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Employee].[EmployeeLocations].[EmployeeId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the employee', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeLocations', @level2type = N'COLUMN', @level2name = N'EmployeeId';


GO
PRINT N'Creating [Employee].[EmployeeLocations].[BankId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the bank the employee can access', @level0type = N'SCHEMA', @level0name = N'Employee', @level1type = N'TABLE', @level1name = N'EmployeeLocations', @level2type = N'COLUMN', @level2name = N'BankId';


GO
PRINT N'Creating [Memberships].[Roles].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the role', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'Roles', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[Roles].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The name of the role', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'Roles', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [Memberships].[Roles].[SystemDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is this record a system default', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'Roles', @level2type = N'COLUMN', @level2name = N'SystemDefault';


GO
PRINT N'Creating [Memberships].[UserDetails].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user details table', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserDetails', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[UserDetails].[Username].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The username a user will use to login with', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserDetails', @level2type = N'COLUMN', @level2name = N'Username';


GO
PRINT N'Creating [Memberships].[UserDetails].[Email].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The email address of a user', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserDetails', @level2type = N'COLUMN', @level2name = N'Email';


GO
PRINT N'Creating [Memberships].[UserDetails].[Comment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'A comment that will be shown to a user when they log in', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserDetails', @level2type = N'COLUMN', @level2name = N'Comment';


GO
PRINT N'Creating [Memberships].[UserActivity].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the users activity record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[UserActivity].[IsApproved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is the user allowed to login', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'IsApproved';


GO
PRINT N'Creating [Memberships].[UserActivity].[IsLockedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is the user locked', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'IsLockedOut';


GO
PRINT N'Creating [Memberships].[UserActivity].[CreatedDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time of the users creation', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'CreatedDate';


GO
PRINT N'Creating [Memberships].[UserActivity].[LastLoggedInDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the user last logged in', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'LastLoggedInDate';


GO
PRINT N'Creating [Memberships].[UserActivity].[LastActiveDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the user last did an action', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'LastActiveDate';


GO
PRINT N'Creating [Memberships].[UserActivity].[LastLockedOutDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the user last got locked out', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserActivity', @level2type = N'COLUMN', @level2name = N'LastLockedOutDate';


GO
PRINT N'Creating [Memberships].[UserAndPassword].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user and password record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserAndPassword', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[UserAndPassword].[Password].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The password of the user', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserAndPassword', @level2type = N'COLUMN', @level2name = N'Password';


GO
PRINT N'Creating [Memberships].[UserAndPassword].[LastChanged].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the password was last changed', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserAndPassword', @level2type = N'COLUMN', @level2name = N'LastChanged';


GO
PRINT N'Creating [Memberships].[UserSecurityQuestionAndAnswer].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user security question and answer record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserSecurityQuestionAndAnswer', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[UserSecurityQuestionAndAnswer].[QuestionId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the question the user is using', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserSecurityQuestionAndAnswer', @level2type = N'COLUMN', @level2name = N'QuestionId';


GO
PRINT N'Creating [Memberships].[UserSecurityQuestionAndAnswer].[Answer].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The answer to the question', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'UserSecurityQuestionAndAnswer', @level2type = N'COLUMN', @level2name = N'Answer';


GO
PRINT N'Creating [Memberships].[SecurityQuestion].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the security question', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'SecurityQuestion', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[SecurityQuestion].[Text].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The question that will be shown to the user', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'SecurityQuestion', @level2type = N'COLUMN', @level2name = N'Text';


GO
PRINT N'Creating [Memberships].[SecurityQuestion].[SystemDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is this question a system defaul question that will be shown in the drop down of questions a user can ask', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'SecurityQuestion', @level2type = N'COLUMN', @level2name = N'SystemDefault';


GO
PRINT N'Creating [Memberships].[User].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This is the ID of the user', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'User', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [Memberships].[User].[SecurityQuestionAnswerId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the security question and answer record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'User', @level2type = N'COLUMN', @level2name = N'SecurityQuestionAnswerId';


GO
PRINT N'Creating [Memberships].[User].[UserAndPasswordId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user and password record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'User', @level2type = N'COLUMN', @level2name = N'UserAndPasswordId';


GO
PRINT N'Creating [Memberships].[User].[UserActivityId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user activity record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'User', @level2type = N'COLUMN', @level2name = N'UserActivityId';


GO
PRINT N'Creating [Memberships].[User].[UserDetailsId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the user details record', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'User', @level2type = N'COLUMN', @level2name = N'UserDetailsId';


GO
PRINT N'Creating [Memberships].[User].[RoleId].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The id of the users role', @level0type = N'SCHEMA', @level0name = N'Memberships', @level1type = N'TABLE', @level1name = N'User', @level2type = N'COLUMN', @level2name = N'RoleId';


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bb3efbdf-9ae7-4776-832f-75a2815882b9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bb3efbdf-9ae7-4776-832f-75a2815882b9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '423cd39f-dc36-425d-bf82-a84fc4f8ebef')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('423cd39f-dc36-425d-bf82-a84fc4f8ebef')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ce4e9479-885c-4221-bee9-af94d5b7250e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ce4e9479-885c-4221-bee9-af94d5b7250e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '675ebc2f-4bd9-453a-a131-ee18b6b68ce2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('675ebc2f-4bd9-453a-a131-ee18b6b68ce2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '26503ad4-027f-4439-a2bd-39d748281983')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('26503ad4-027f-4439-a2bd-39d748281983')

GO

GO
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'Memberships' AND TABLE_NAME = 'Roles'))
BEGIN
	IF(NOT EXISTS(SELECT * FROM [Memberships].[Roles] WHERE [Name] = 'Administrator'))
		INSERT INTO [Memberships].[Roles] ([Name],[SystemDefault]) VALUES ('Administrator',1)

	IF(NOT EXISTS(SELECT * FROM [Memberships].[Roles] WHERE [Name] = 'Bank Manager'))
		INSERT INTO [Memberships].[Roles] ([Name],[SystemDefault]) VALUES ('Bank Manager',1)

	IF(NOT EXISTS(SELECT * FROM [Memberships].[Roles] WHERE [Name] = 'Banker'))
		INSERT INTO [Memberships].[Roles] ([Name],[SystemDefault]) VALUES ('Banker',1)

	IF(NOT EXISTS(SELECT * FROM [Memberships].[Roles] WHERE [Name] = 'Customer'))
		INSERT INTO [Memberships].[Roles] ([Name],[SystemDefault]) VALUES ('Customer',1)

END

IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'Memberships' AND TABLE_NAME = 'SecurityQuestion'))
BEGIN
	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What is the first and last name of your first boyfriend or girlfriend?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What is the first and last name of your first boyfriend or girlfriend?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'Which phone number do you remember most from your childhood?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('Which phone number do you remember most from your childhood?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What was your favorite place to visit as a child?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What was your favorite place to visit as a child?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'Who is your favorite actor, musician, or artist?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('Who is your favorite actor, musician, or artist?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What is the name of your favorite pet?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What is the name of your favorite pet?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'In what city were you born?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('In what city were you born?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What high school did you attend?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What high school did you attend?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What is your mother''s maiden name?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What is your mother''s maiden name?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What street did you grow up on?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What street did you grow up on?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What was the make of your first car?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What was the make of your first car?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'When is your anniversary?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('When is your anniversary?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What is your favorite color?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What is your favorite color?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What is your father''s middle name?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What is your father''s middle name?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What is the name of your first grade teacher?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What is the name of your first grade teacher?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'What was your high school mascot?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('What was your high school mascot?',1)

	IF(NOT EXISTS (SELECT * FROM [SafeBankDB].[Memberships].[SecurityQuestion] WHERE [Text] = 'Which is your favorite web browser?' AND [SystemDefault] = 1))
		INSERT INTO [Memberships].[SecurityQuestion] ([Text],[SystemDefault]) VALUES ('Which is your favorite web browser?',1)
END
IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'Accounts' AND TABLE_NAME = 'AccessLevel'))
BEGIN
	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccessLevel] WHERE [Name] = 'Owner'))
		INSERT INTO [Accounts].[AccessLevel] ([Name]) VALUES ('Owner')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccessLevel] WHERE [Name] = 'Manager'))
		INSERT INTO [Accounts].[AccessLevel] ([Name]) VALUES ('Manager')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccessLevel] WHERE [Name] = 'View'))
		INSERT INTO [Accounts].[AccessLevel] ([Name]) VALUES ('View')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccessLevel] WHERE [Name] = 'Audit'))
		INSERT INTO [Accounts].[AccessLevel] ([Name]) VALUES ('Audit')
END

IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'Accounts' AND TABLE_NAME = 'AccountTypes'))
BEGIN
	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccountTypes] WHERE [Name] = 'Current Account'))
		INSERT INTO [Accounts].[AccountTypes] ([Name]) VALUES ('Current Account')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccountTypes] WHERE [Name] = 'Cash Account'))
		INSERT INTO [Accounts].[AccountTypes] ([Name]) VALUES ('Cash Account')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccountTypes] WHERE [Name] = 'Savings Account'))
		INSERT INTO [Accounts].[AccountTypes] ([Name]) VALUES ('Savings Account')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccountTypes] WHERE [Name] = 'High Earners'))
		INSERT INTO [Accounts].[AccountTypes] ([Name]) VALUES ('High Earners')

	IF(NOT EXISTS(SELECT * FROM [Accounts].[AccountTypes] WHERE [Name] = 'ISA'))
		INSERT INTO [Accounts].[AccountTypes] ([Name]) VALUES ('ISA')

END

IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'Memberships' AND TABLE_NAME = 'User'))
BEGIN
	IF (NOT EXISTS(SELECT * FROM [Memberships].[UserDetails] WHERE [Username] = 'SafeBankAdmin'))
	BEGIN
		DECLARE @AdminRoleId INT
		DECLARE @UserDetailsId INT
		DECLARE @UserActivityId INT
		DECLARE @UserAndPasswordId INT
		DECLARE @UserSecurityQuestionAndAnswerId INT
		DECLARE @SecurityQuestionId INT

		INSERT INTO [Memberships].[SecurityQuestion]
		([Text],[SystemDefault])
		VALUES
		('What is the meaning of this?',0)
		SET @SecurityQuestionId = @@IDENTITY

		INSERT INTO [Memberships].[UserSecurityQuestionAndAnswer]
		([QuestionId],[Answer])
		VALUES
		(@SecurityQuestionId,'')
		SET @UserSecurityQuestionAndAnswerId = @@IDENTITY

		--Admin password Admin1234
		INSERT INTO [Memberships].[UserAndPassword]
		([Password],[LastChanged])
		VALUES
		('$2a$05$ViiCeg9QFXDyOUzTFqHKI.SkpD7pSiqxOjDNybJ/DJ51aGhJRB.4K',GETDATE())
		SET @UserAndPasswordId = @@IDENTITY
		
		INSERT INTO [Memberships].[UserActivity]
		([IsApproved],[IsLockedOut],[CreatedDate],[LastLoggedInDate],[LastActiveDate],[LastLockedOutDate])
		VALUES
		(1,0,GETDATE(),NULL,GETDATE(),NULL)
		SET @UserActivityId = @@IDENTITY

		INSERT INTO [Memberships].[UserDetails]
		([Username],[Email],[Comment])
		VALUES
		('SafeBankAdmin','admin@safebank.com','')
		SET @UserDetailsId = @@IDENTITY

		SELECT @AdminRoleId = [Id] FROM [Memberships].[Roles] WHERE [Name] = 'Administrator'

		INSERT INTO [Memberships].[User]
		([SecurityQuestionAnswerId],[UserAndPasswordId],[UserActivityId],[UserDetailsId],[RoleId])
		VALUES
		(@UserSecurityQuestionAndAnswerId,@UserAndPasswordId,@UserActivityId,@UserDetailsId,@AdminRoleId)
	END
END
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
